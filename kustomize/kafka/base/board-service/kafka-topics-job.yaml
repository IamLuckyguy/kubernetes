apiVersion: batch/v1
kind: Job
metadata:
  name: create-board-service-kafka-topics
spec:
  template:
    spec:
      containers:
      - name: kafka-topics-creator
        image: bitnami/kafka:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            for topic in $(jq -c '.topics[]' /config/topics.json); do
              name=$(echo $topic | jq -r '.name')
              partitions=$(echo $topic | jq -r '.partitions')
              replication=$(echo $topic | jq -r '.replicationFactor')
              configs=$(echo $topic | jq -r '.configs | to_entries | map("--config \(.key)=\(.value)") | join(" ")')
              
              echo "Creating topic: $name"
              kafka-topics.sh --create \
                --if-not-exists \
                --bootstrap-server kafka-headless:9092 \
                --topic "$name" \
                --partitions "$partitions" \
                --replication-factor "$replication" \
                $configs
            done
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        configMap:
          name: board-service-kafka-topics
      restartPolicy: OnFailure
